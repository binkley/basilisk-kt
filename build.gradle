import java.nio.file.Files
import java.nio.file.Paths

import static java.nio.file.Files.createSymbolicLink

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://dl.bintray.com/kotlin/exposed"
        }
        maven {
            url "https://jitpack.io"
        }
    }
}

plugins {
    id "base"
    id "build-dashboard"

    id "com.github.ben-manes.versions" version "0.21.0"
    id "se.patrikerdes.use-latest-versions" version "0.2.11"
    id "com.dorongold.task-tree" version "1.4"

    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

gradle.afterProject { project ->
    linkPrePush(project)
}

allprojects {
    apply plugin: "io.spring.dependency-management"

    defaultTasks "build"
}

subprojects {
    ext {
        atriumVersion = "0.8.0"
        exposedVersion = "0.16.3"
        handlebarsVersion = "4.1.2"
        jacksonVersion = "2.9.9"
        junit5Version = "5.5.1"
        kotlinVersion = "1.3.41"
        logbackVersion = "1.2.3"
        postgresVersion = "10.9"
        spekVersion = "1.2.1"
        testContainersVersion = "1.11.4"
    }

    buildscript {
        repositories {
            gradlePluginPortal()
            mavenCentral()
            jcenter()
        }

        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.41"
            classpath "org.jetbrains.kotlin:kotlin-allopen:1.3.41"
            classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
            classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.0.0"
            classpath "gradle.plugin.com.pasam.gradle.buildinfo:spring-boot-build-info:0.1.3"
        }
    }

    version = "0.1"
    group = "hm.binkley"

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://dl.bintray.com/kotlin/exposed"
        }
        maven {
            url "https://jitpack.io"
        }
    }

    tasks.withType(Test) {
        systemProperty "java.util.logging.config.file", "${project.rootDir}/config/logging.properties"

        failFast = true

        useJUnitPlatform()

        testLogging {
            showExceptions = true
            showStandardStreams = true
        }
    }
}

build {
    finalizedBy buildDashboard
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = "5.5.1"
}

static void linkPrePush(project) {
    def link = Paths.get("${project.rootDir}", ".git", "hooks", "pre-push")
    def target = Paths.get("${project.rootDir}", "pre-push")
    if (!Files.exists(link)) createSymbolicLink(link, target)
}
