import java.nio.file.Files
import java.nio.file.Paths

import static java.nio.file.Files.createSymbolicLink

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://dl.bintray.com/kotlin/exposed"
        }
        maven {
            url "https://jitpack.io"
        }
    }
}

plugins {
    id "base"
    id "build-dashboard"

    id "com.github.ben-manes.versions" version "0.21.0"
    id "se.patrikerdes.use-latest-versions" version "0.2.11"
    id "com.dorongold.task-tree" version "1.4"

    id "io.spring.dependency-management" version "1.0.8.RELEASE"
}

gradle.afterProject { project ->
    linkPrePush(project)
}

allprojects {
    apply plugin: "io.spring.dependency-management"

    defaultTasks "build"
}

subprojects {
    version = "0.1"
    group = "hm.binkley"

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        maven {
            url "https://dl.bintray.com/kotlin/exposed"
        }
        maven {
            url "https://jitpack.io"
        }
    }
}

build {
    finalizedBy buildDashboard
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = "5.5.1"
}

static void linkPrePush(project) {
    def link = Paths.get("${project.rootDir}", ".git", "hooks", "pre-push")
    def target = Paths.get("${project.rootDir}", "pre-push")
    if (!Files.exists(link)) createSymbolicLink(link, target)
}
